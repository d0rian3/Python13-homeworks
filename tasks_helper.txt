Вот пошаговый план реализации:

### 1. **Проектирование структуры данных**
- Используем **словарь** `{id: {название, описание, приоритет, статус}}`
- Приоритеты: `низкий, средний, высокий`
- Статусы: `новая, в процессе, завершена`

### 2. **Базовые функции без файлов и интерфейса**
- **Добавление задачи**: Создать функцию `add_task()`
- **Просмотр задач**: Создать функцию `view_tasks()`
- **Обновление задачи**: Создать функцию `update_task(id, поле, значение)`
- **Удаление задачи**: Создать функцию `delete_task(id)`

### 3. **Добавление проверок**
- Проверять ввод пользователя (существование `id`, правильность `приоритета/статуса`)
- Реализовать сортировку и поиск

### 4. **Добавление работы с файлом**
- Сохранение задач в файл (`tasks.json`)
- Чтение задач из файла при старте

### 5. **Создание консольного интерфейса**
- Реализовать меню через `while True`
- Запрашивать у пользователя ввод (выбор действий, ввод данных)
- Проверять корректность ввода

### 6. **Финальное тестирование и отладка**
- Проверить работу всех функций
- Обработать возможные ошибки (например, файл не найден)

Сначала лучше сделать **простой код**, а потом **добавлять проверки, файлы и интерфейс**.